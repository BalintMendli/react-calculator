{"version":3,"sources":["constants/buttons.ts","constants/maps.ts","constants/dimensions.ts","logic/utils.ts","logic/operate.ts","logic/handleInput.ts","components/Display.tsx","constants/colors.ts","components/Button.tsx","components/BtnPanel.tsx","components/Calculator.tsx","components/App.tsx","index.tsx"],"names":["buttons","label","id","type","position","x","y","keyMap","Enter","Delete","Backspace","Decimal","expToDisplay","Map","adjustCharMap","labelToExp","Ï€","clearMap","maxDigit","getLabelFromKey","key","some","l","isLabel","countOccurrences","str","substr","match","length","transformForDisplay","display","transformedDisplay","forEach","regex","replace","fixFloat","n","precision","Math","round","transformError","err","split","found","number","parseInt","adjust","exp","ch","RegExp","adjustChars","slice","toString","hasMaxDigit","clearCount","Array","from","keys","find","k","source","test","get","getGridPos","pos","isArray","getDimStyle","dim","fill","join","evaluateExp","displayValue","state","lastOp","indexOf","lastPoint","expression","evaluate","isResult","error","e","message","handleNum","num","lastPi","handleOp","op","handleDecimal","displayArr","hasPoint","includes","handleParen","paren","hasLessOpening","handleExt","ext","toExp","handleClear","handleMap","clear","operation","decimal","equals","handleInput","button","btn","Error","selectButton","func","operate","StyledDisplay","styled","div","StyledError","StyledExp","Display","result","defaultColor","colors","getColor","StyledButton","gridPos","color","Button","handleClick","onClick","StyledBtnPanel","props","width","height","BtnPanel","map","StyledCalculator","heightPx","widthPx","Calculator","StyledApp","App","appDiv","React","createRef","bind","handleKeyDown","this","current","focus","setState","prevState","preventDefault","role","tabIndex","ref","onKeyDown","Component","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1cb687af.chunk.js","sourcesContent":["const buttons = [\r\n  { label: 'AC', id: 'clear', type: 'clear', position: { x: 6, y: 1 } },\r\n  { label: 'C', id: 'clear', type: 'clear', position: { x: 5, y: 1 } },\r\n  { label: '/', id: 'divide', type: 'operation', position: { x: 3, y: 1 } },\r\n  { label: '*', id: 'multiply', type: 'operation', position: { x: 4, y: 1 } },\r\n  { label: '7', id: 'seven', type: 'number', position: { x: 3, y: 2 } },\r\n  { label: '8', id: 'eight', type: 'number', position: { x: 4, y: 2 } },\r\n  { label: '9', id: 'nine', type: 'number', position: { x: 5, y: 2 } },\r\n  { label: '-', id: 'subtract', type: 'operation', position: { x: 6, y: 2 } },\r\n  { label: '4', id: 'four', type: 'number', position: { x: 3, y: 3 } },\r\n  { label: '5', id: 'five', type: 'number', position: { x: 4, y: 3 } },\r\n  { label: '6', id: 'six', type: 'number', position: { x: 5, y: 3 } },\r\n  { label: '+', id: 'add', type: 'operation', position: { x: 6, y: 3 } },\r\n  { label: '1', id: 'one', type: 'number', position: { x: 3, y: 4 } },\r\n  { label: '2', id: 'two', type: 'number', position: { x: 4, y: 4 } },\r\n  { label: '3', id: 'three', type: 'number', position: { x: 5, y: 4 } },\r\n  { label: '=', id: 'equals', type: 'equals', position: { x: 6, y: [4, 6] } },\r\n  { label: '0', id: 'zero', type: 'number', position: { x: [3, 5], y: 5 } },\r\n  { label: '.', id: 'decimal', type: 'decimal', position: { x: 5, y: 5 } },\r\n  { label: '(', id: 'open-paren', type: 'paren', position: { x: 1, y: 1 } },\r\n  { label: ')', id: 'close-paren', type: 'paren', position: { x: 2, y: 1 } },\r\n  { label: 'sin', id: 'sin', type: 'ext', position: { x: 1, y: 2 } },\r\n  { label: 'cos', id: 'cos', type: 'ext', position: { x: 1, y: 3 } },\r\n  { label: 'tan', id: 'tan', type: 'ext', position: { x: 1, y: 4 } },\r\n  { label: 'Ï€', id: 'tan', type: 'ext', position: { x: 1, y: 5 } },\r\n  { label: 'âˆš', id: 'tan', type: 'ext', position: { x: 2, y: 2 } },\r\n  { label: 'xÂ²', id: 'tan', type: 'ext', position: { x: 2, y: 3 } },\r\n  { label: 'log', id: 'tan', type: 'ext', position: { x: 2, y: 4 } },\r\n  { label: 'x!', id: 'tan', type: 'ext', position: { x: 2, y: 5 } },\r\n] as const;\r\n\r\nexport type Button = typeof buttons[number];\r\n\r\nexport type Label = typeof buttons[number]['label'];\r\n\r\nexport type Id = typeof buttons[number]['id'];\r\n\r\nexport type BtnType = typeof buttons[number]['type'];\r\n\r\nexport type Pos = typeof buttons[number]['position'];\r\n\r\nexport default buttons;\r\n","import { Label } from './buttons';\r\n\r\nexport const keyMap: { [key: string]: Label } = {\r\n  Enter: '=',\r\n  Delete: 'AC',\r\n  Backspace: 'C',\r\n  Decimal: '.',\r\n  ',': '.',\r\n};\r\n\r\nexport const expToDisplay = new Map([\r\n  [/\\*/g, ' Ã— '],\r\n  [/\\+/g, ' + '],\r\n  [/-/g, ' - '],\r\n  [/\\//g, ' / '],\r\n  [/\\^2/g, 'Â²'],\r\n  [/sqrt/g, ' âˆš'],\r\n  [/pi/g, 'Ï€'],\r\n]);\r\n\r\nexport const adjustCharMap = new Map([[/\\^2/g, 1], [/pi/g, 1], [/sqrt/g, 3]]);\r\n\r\nexport const labelToExp: { [key in Label]?: string } = {\r\n  Ï€: 'pi',\r\n  'xÂ²': '^2',\r\n  'x!': '!',\r\n  'âˆš': 'sqrt(',\r\n};\r\n\r\nexport const clearMap = new Map([\r\n  [/\\^2/, 2],\r\n  [/pi/, 2],\r\n  [/sqrt\\(/, 5],\r\n  [/sin\\(/, 4],\r\n  [/cos\\(/, 4],\r\n  [/tan\\(/, 4],\r\n  [/log\\(/, 4],\r\n]);\r\n","export const heightPx = 350;\r\n\r\nexport const widthPx = 450;\r\n\r\nexport const rows = 5;\r\n\r\nexport const columns = 6;\r\n\r\nexport const maxDigit = 32;\r\n","import buttons, { Label, Pos } from '../constants/buttons';\r\nimport {\r\n  keyMap,\r\n  expToDisplay,\r\n  adjustCharMap,\r\n  clearMap,\r\n} from '../constants/maps';\r\nimport { maxDigit } from '../constants/dimensions';\r\n\r\nfunction isLabel(key: string): key is Label {\r\n  return buttons.some(l => l.label === key);\r\n}\r\n\r\nexport function getLabelFromKey(key: string): Label | '' {\r\n  let label: Label | '' = '';\r\n  label = keyMap[key];\r\n  if (isLabel(key)) {\r\n    label = key;\r\n  }\r\n  return label;\r\n}\r\n\r\nexport function countOccurrences(str: string, substr: RegExp): number {\r\n  return (str.match(substr) || []).length;\r\n}\r\n\r\nexport function transformForDisplay(display: string): string {\r\n  let transformedDisplay = display;\r\n  expToDisplay.forEach((str, regex) => {\r\n    transformedDisplay = transformedDisplay.replace(regex, str);\r\n  });\r\n  return transformedDisplay;\r\n}\r\n\r\nexport function fixFloat(n: number): number {\r\n  const precision = 10 ** 11;\r\n  return Math.round(precision * n) / precision;\r\n}\r\n\r\nfunction adjustChars(exp: string): number {\r\n  let adjust = 0;\r\n  adjustCharMap.forEach((n, ch) => {\r\n    adjust += countOccurrences(exp, new RegExp(ch, 'g')) * n;\r\n  });\r\n  return adjust;\r\n}\r\n\r\nexport function transformError(err: string, display: string): string {\r\n  if (err.length > 80) return err.split(' (')[0];\r\n  const re = /(\\d*)\\)$/;\r\n  const found = err.match(re);\r\n  if (found) {\r\n    const number = parseInt(found[1], 10);\r\n    const adjust = adjustChars(display.slice(0, number));\r\n    const replaced = err.replace(/\\d*\\)$/, `${(number - adjust).toString()})`);\r\n    return replaced;\r\n  }\r\n  return err;\r\n}\r\n\r\nexport function hasMaxDigit(exp: string): boolean {\r\n  return transformForDisplay(exp).length >= maxDigit;\r\n}\r\n\r\nexport function clearCount(exp: string): number {\r\n  const found = Array.from(clearMap.keys()).find(k => {\r\n    const re = new RegExp(k.source + /$/.source);\r\n    return re.test(exp);\r\n  });\r\n  const n = found && clearMap.get(found);\r\n  if (n) return n;\r\n  return 1;\r\n}\r\n\r\nexport function getGridPos(pos: Pos): [string, string] {\r\n  const xPos = Array.isArray(pos.x)\r\n    ? `${pos.x[0]} / ${pos.x[1]}`\r\n    : pos.x.toString();\r\n  const yPos = Array.isArray(pos.y)\r\n    ? `${pos.y[0]} / ${pos.y[1]}`\r\n    : pos.y.toString();\r\n  return [xPos, yPos];\r\n}\r\n\r\nexport function getDimStyle(dim: number): string {\r\n  return new Array(dim).fill('1fr').join(' ');\r\n}\r\n","import { evaluate } from 'mathjs';\r\nimport { countOccurrences, fixFloat, hasMaxDigit, clearCount } from './utils';\r\nimport { Label } from '../constants/buttons';\r\nimport { labelToExp } from '../constants/maps';\r\nimport { AppState } from '../components/AppState';\r\n\r\ninterface HandleParams {\r\n  label: Label;\r\n  state: AppState;\r\n}\r\n\r\nexport function evaluateExp({\r\n  state: { displayValue },\r\n}: HandleParams): Partial<AppState> | null {\r\n  const lastOp =\r\n    ['/', '*', '+', '-'].indexOf(displayValue[displayValue.length - 1]) !== -1;\r\n  const lastPoint = displayValue.slice(-1) === '.';\r\n  if (!lastOp && !lastPoint) {\r\n    try {\r\n      return {\r\n        expression: displayValue,\r\n        displayValue: fixFloat(evaluate(displayValue)).toString(),\r\n        isResult: true,\r\n        error: '',\r\n      };\r\n    } catch (e) {\r\n      return { error: e.message };\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function handleNum({\r\n  label: num,\r\n  state: { displayValue, isResult },\r\n}: HandleParams): Partial<AppState> | null {\r\n  const maxDigit = hasMaxDigit(displayValue);\r\n  const lastPi = displayValue.slice(-2) === 'pi';\r\n  if (displayValue === '0' || isResult) {\r\n    return {\r\n      displayValue: num,\r\n      isResult: false,\r\n      error: '',\r\n    };\r\n  }\r\n  if (!maxDigit && !lastPi) {\r\n    return {\r\n      displayValue: displayValue + num,\r\n      error: '',\r\n    };\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function handleOp({\r\n  label: op,\r\n  state: { displayValue = '' },\r\n}: HandleParams): Partial<AppState> | null {\r\n  const lastOp =\r\n    ['/', '*', '+', '-'].indexOf(displayValue[displayValue.length - 1]) !== -1;\r\n  const lastPoint = displayValue.slice(-1) === '.';\r\n  const maxDigit = hasMaxDigit(displayValue);\r\n  if (displayValue === '0') {\r\n    return {\r\n      displayValue: displayValue + op,\r\n      isResult: false,\r\n      error: '',\r\n    };\r\n  }\r\n  if (!lastOp && !lastPoint && displayValue !== '0' && !maxDigit) {\r\n    return {\r\n      displayValue: displayValue + op,\r\n      isResult: false,\r\n      error: '',\r\n    };\r\n  }\r\n  if (lastOp) {\r\n    return {\r\n      displayValue: displayValue.slice(0, -1) + op,\r\n      isResult: false,\r\n      error: '',\r\n    };\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function handleDecimal({\r\n  state: { displayValue, isResult },\r\n}: HandleParams): Partial<AppState> | null {\r\n  const displayArr = displayValue.split(/[+\\-*/]/);\r\n  const hasPoint = displayArr[displayArr.length - 1].includes('.');\r\n  const lastPi = displayValue.slice(-2) === 'pi';\r\n  const maxDigit = hasMaxDigit(displayValue);\r\n  if (!hasPoint && !isResult && !maxDigit && !lastPi) {\r\n    return {\r\n      displayValue: `${displayValue}.`,\r\n      error: '',\r\n    };\r\n  }\r\n  if (isResult) {\r\n    return {\r\n      displayValue: '0.',\r\n      isResult: false,\r\n      error: '',\r\n    };\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function handleParen({\r\n  label: paren,\r\n  state: { displayValue },\r\n}: HandleParams): Partial<AppState> | null {\r\n  const maxDigit = hasMaxDigit(displayValue);\r\n  const hasLessOpening =\r\n    paren === ')' &&\r\n    countOccurrences(displayValue, /\\(/g) >\r\n      countOccurrences(displayValue, /\\)/g);\r\n  if (displayValue === '0' && hasLessOpening) {\r\n    return {\r\n      displayValue: paren,\r\n      isResult: false,\r\n      error: '',\r\n    };\r\n  }\r\n  if (!maxDigit && (paren === '(' || hasLessOpening)) {\r\n    return {\r\n      displayValue: displayValue + paren,\r\n      isResult: false,\r\n      error: '',\r\n    };\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function handleExt({\r\n  label: ext,\r\n  state: { displayValue = '' },\r\n}: HandleParams): Partial<AppState> | null {\r\n  let toExp = '';\r\n  if (['sin', 'cos', 'tan', 'log'].includes(ext)) toExp = `${ext}(`;\r\n  else toExp = labelToExp[ext] || '';\r\n  const maxDigit = hasMaxDigit(displayValue);\r\n  if (displayValue === '0' && toExp !== '^2' && toExp !== '!') {\r\n    return {\r\n      displayValue: toExp,\r\n      isResult: false,\r\n      error: '',\r\n    };\r\n  }\r\n  if (!maxDigit) {\r\n    return {\r\n      displayValue: displayValue + toExp,\r\n      isResult: false,\r\n      error: '',\r\n    };\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function handleClear({\r\n  label,\r\n  state: { displayValue, isResult },\r\n}: HandleParams): Partial<AppState> | null {\r\n  if (label === 'AC') return { displayValue: '0', expression: '', error: '' };\r\n  if (label === 'C' && !isResult)\r\n    return {\r\n      displayValue:\r\n        displayValue.length > 1\r\n          ? displayValue.slice(0, -clearCount(displayValue))\r\n          : '0',\r\n      error: '',\r\n    };\r\n  return null;\r\n}\r\n","import buttons, { Button, Label, BtnType } from '../constants/buttons';\r\nimport { AppState } from '../components/AppState';\r\nimport * as operate from './operate';\r\n\r\nfunction selectButton(label: Label): Button | never {\r\n  const button = buttons.find(btn => btn.label === label);\r\n  if (!button) throw new Error('Invalid button label');\r\n  return button;\r\n}\r\n\r\nconst handleMap: { [key in BtnType]: keyof typeof operate } = {\r\n  clear: 'handleClear',\r\n  number: 'handleNum',\r\n  operation: 'handleOp',\r\n  decimal: 'handleDecimal',\r\n  equals: 'evaluateExp',\r\n  ext: 'handleExt',\r\n  paren: 'handleParen',\r\n};\r\n\r\nexport default function handleInput(\r\n  label: Label,\r\n  state: AppState\r\n): Partial<AppState> | null {\r\n  const button = selectButton(label);\r\n  const func = handleMap[button.type];\r\n  return operate[func]({ label, state });\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport { transformForDisplay, transformError } from '../logic/utils';\r\n\r\ninterface DisplayProps {\r\n  result: string;\r\n  expression: string;\r\n  error: string;\r\n}\r\n\r\nconst StyledDisplay = styled.div`\r\n  height: 80px;\r\n  color: #fff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  justify-content: flex-start;\r\n  padding-bottom: 3px;\r\n  font-size: 28px;\r\n  line-height: 1.05;\r\n`;\r\n\r\nconst StyledError = styled.div`\r\n  height: 18px;\r\n  max-width: 420px;\r\n  padding: 2px 5px;\r\n  margin-top: 5px;\r\n  background-color: #a5243d;\r\n  font-size: 12px;\r\n  border-radius: 2px;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n\r\n  :empty {\r\n    visibility: hidden;\r\n  }\r\n`;\r\n\r\nconst StyledExp = styled.div`\r\n  height: 22px;\r\n  font-size: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  transition: all 150ms ease-in;\r\n  transform-origin: top right;\r\n\r\n  :empty {\r\n    transform: translate(-15px, 25px) scale(1.5);\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\nconst Display = ({ result, expression, error }: DisplayProps): JSX.Element => (\r\n  <StyledDisplay>\r\n    <StyledError>{error ? transformError(error, result) : ''}</StyledError>\r\n    <StyledExp>\r\n      {expression ? `${transformForDisplay(expression)} =` : ''}\r\n    </StyledExp>\r\n    <div>{transformForDisplay(result)}</div>\r\n  </StyledDisplay>\r\n);\r\n\r\nexport default Display;\r\n","import { Button, BtnType } from './buttons';\r\n\r\nexport const defaultColor = '#42464a';\r\n\r\nconst colorMap = {\r\n  equals: '#466995',\r\n  operation: '#798086',\r\n  paren: '#595a5b',\r\n  clear: '#a5243d',\r\n  ext: '#595a5b',\r\n} as const;\r\n\r\ntype Keys = keyof typeof colorMap;\r\n\r\nexport type Color = typeof colorMap[Keys] | typeof defaultColor;\r\n\r\nconst colors: { [key in BtnType]?: Color } = colorMap;\r\n\r\nexport function getColor(btn: Button): Color {\r\n  return colors[btn.type] || defaultColor;\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport { Label, Id, Pos } from '../constants/buttons';\r\nimport { Color } from '../constants/colors';\r\nimport { getGridPos } from '../logic/utils';\r\n\r\ninterface ButtonProps {\r\n  label: Label;\r\n  id: Id;\r\n  pos: Pos;\r\n  color: Color;\r\n  handleClick: (label: Label) => void;\r\n}\r\n\r\ninterface StyledProps {\r\n  color: Color;\r\n  gridPos: [string, string];\r\n}\r\n\r\nconst StyledButton = styled.button<StyledProps>`\r\n  grid-column: ${({ gridPos }): string => gridPos[0]};\r\n  grid-row: ${({ gridPos }): string => gridPos[1]};\r\n  background: ${({ color }): string => color};\r\n  padding: 0;\r\n  font: inherit;\r\n  font-size: 1.1rem;\r\n  outline: inherit;\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 1px solid #000;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  opacity: 0.85;\r\n  transition: opacity 250ms ease-in-out;\r\n\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst Button = ({\r\n  label,\r\n  id,\r\n  handleClick,\r\n  pos,\r\n  color,\r\n}: ButtonProps): JSX.Element => {\r\n  const handleBtnClick = (): void => {\r\n    handleClick(label);\r\n  };\r\n\r\n  return (\r\n    <StyledButton\r\n      type=\"button\"\r\n      id={id}\r\n      color={color}\r\n      gridPos={getGridPos(pos)}\r\n      onClick={handleBtnClick}\r\n    >\r\n      {label}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport buttons, { Label } from '../constants/buttons';\r\nimport { getColor } from '../constants/colors';\r\nimport { rows, columns } from '../constants/dimensions';\r\nimport { getDimStyle } from '../logic/utils';\r\nimport Button from './Button';\r\n\r\ninterface BtnPanelProps {\r\n  handleClick: (label: Label) => void;\r\n}\r\n\r\ninterface StyledProps {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nconst StyledBtnPanel = styled.div<StyledProps>`\r\n  background-color: #0b0c11;\r\n  flex: 1;\r\n  display: grid;\r\n  grid-template-columns: ${(props): string => getDimStyle(props.width)};\r\n  grid-template-rows: ${(props): string => getDimStyle(props.height)};\r\n  box-shadow: 1px 2px 10px rgba(0, 0, 0, 0.5);\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst BtnPanel = ({ handleClick }: BtnPanelProps): JSX.Element => (\r\n  <StyledBtnPanel width={columns} height={rows}>\r\n    {buttons.map(btn => (\r\n      <Button\r\n        key={btn.label}\r\n        label={btn.label}\r\n        id={btn.id}\r\n        pos={btn.position}\r\n        color={getColor(btn)}\r\n        handleClick={handleClick}\r\n      />\r\n    ))}\r\n  </StyledBtnPanel>\r\n);\r\n\r\nexport default BtnPanel;\r\n","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport { Label } from '../constants/buttons';\r\nimport { heightPx, widthPx } from '../constants/dimensions';\r\nimport Display from './Display';\r\nimport BtnPanel from './BtnPanel';\r\n\r\ninterface CalculatorProps {\r\n  result: string;\r\n  expression: string;\r\n  error: string;\r\n  handleClick: (label: Label) => void;\r\n}\r\n\r\ninterface StyledProps {\r\n  widthPx: number;\r\n  heightPx: number;\r\n}\r\n\r\nconst StyledCalculator = styled.div<StyledProps>`\r\n  height: ${(props): string => props.heightPx.toString()}px;\r\n  width: ${(props): string => props.widthPx.toString()}px;\r\n  background-color: #0b0c11;\r\n  padding: 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-shadow: 1px 2px 10px rgba(0, 0, 0, 0.5);\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Calculator = ({\r\n  result,\r\n  expression,\r\n  error,\r\n  handleClick,\r\n}: CalculatorProps): JSX.Element => (\r\n  <StyledCalculator widthPx={widthPx} heightPx={heightPx}>\r\n    <Display result={result} expression={expression} error={error} />\r\n    <BtnPanel handleClick={handleClick} />\r\n  </StyledCalculator>\r\n);\r\n\r\nexport default Calculator;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport { getLabelFromKey } from '../logic/utils';\r\nimport handleInput from '../logic/handleInput';\r\nimport Calculator from './Calculator';\r\nimport { Label } from '../constants/buttons';\r\nimport { AppState } from './AppState';\r\n\r\nconst StyledApp = styled.div`\r\n  text-align: center;\r\n  background-color: #a6cfe2;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nclass App extends Component<{}, AppState> {\r\n  private appDiv = React.createRef<HTMLDivElement>();\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = {\r\n      displayValue: '0',\r\n      expression: '',\r\n      isResult: false,\r\n      error: '',\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n  }\r\n\r\n  componentDidMount(): void {\r\n    if (this.appDiv.current) this.appDiv.current.focus();\r\n  }\r\n\r\n  handleClick(label: Label): void {\r\n    this.setState(\r\n      prevState =>\r\n        handleInput(label, { ...prevState }) as Pick<AppState, keyof AppState>\r\n    );\r\n  }\r\n\r\n  handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>): void {\r\n    e.preventDefault();\r\n    const label = getLabelFromKey(e.key);\r\n    if (label)\r\n      this.setState(\r\n        prevState =>\r\n          handleInput(label, prevState) as Pick<AppState, keyof AppState>\r\n      );\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    const { displayValue, expression, error } = this.state;\r\n    return (\r\n      <StyledApp\r\n        role=\"button\"\r\n        tabIndex={0}\r\n        ref={this.appDiv}\r\n        onKeyDown={this.handleKeyDown}\r\n      >\r\n        <Calculator\r\n          handleClick={this.handleClick}\r\n          result={displayValue}\r\n          expression={expression}\r\n          error={error}\r\n        />\r\n      </StyledApp>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createGlobalStyle } from 'styled-components/macro';\r\nimport App from './components/App';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css?family=Crimson+Text');\r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: 'Crimson Text', serif;\r\n    font-size: 18px;\r\n    text-rendering: optimizeLegibility;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -webkit-font-smoothing: antialiased;\r\n    text-shadow: rgba(0, 0, 0, 0.01) 0 0 1px;\r\n  }\r\n\r\n  *, *::before, *::after {\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nReactDOM.render(\r\n  <>\r\n    <GlobalStyle />\r\n    <App />\r\n  </>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}